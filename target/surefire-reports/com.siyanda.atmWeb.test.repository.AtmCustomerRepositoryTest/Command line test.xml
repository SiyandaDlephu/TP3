<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="linuxmint" name="Command line test" tests="4" failures="0" timestamp="10 May 2014 19:49:45 GMT" time="3.043" errors="0">
  <testcase name="@BeforeClass setUpClass" time="0.0" classname="com.siyanda.atmWeb.test.repository.AtmCustomerRepositoryTest">
    <failure type="org.springframework.beans.factory.BeanCreationException" message="Error creating bean with name &amp;apos;entityManagerFactory&amp;apos; defined in class com.siyanda.atmweb.app.conf.ConnectionConfig: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory">
      <![CDATA[org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class com.siyanda.atmweb.app.conf.ConnectionConfig: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:304)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:300)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:195)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:750)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)
	at org.springframework.context.annotation.AnnotationConfigApplicationContext.<init>(AnnotationConfigApplicationContext.java:84)
	at com.siyanda.atmWeb.test.repository.AtmCustomerRepositoryTest.setUpClass(AtmCustomerRepositoryTest.java:94)
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.persistenceException(EntityManagerFactoryBuilderImpl.java:1225)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.access$600(EntityManagerFactoryBuilderImpl.java:119)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl$4.perform(EntityManagerFactoryBuilderImpl.java:853)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl$4.perform(EntityManagerFactoryBuilderImpl.java:843)
	at org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.withTccl(ClassLoaderServiceImpl.java:397)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:842)
	at org.hibernate.jpa.HibernatePersistenceProvider.createContainerEntityManagerFactory(HibernatePersistenceProvider.java:152)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:336)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1612)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1549)
	... 44 more
Caused by: org.hibernate.MappingException: Repeated column in mapping for entity: com.siyanda.atmweb.domain.AtmCustomer column: id (should be mapped with insert="false" update="false")
	at org.hibernate.mapping.PersistentClass.checkColumnDuplication(PersistentClass.java:709)
	at org.hibernate.mapping.PersistentClass.checkPropertyColumnDuplication(PersistentClass.java:731)
	at org.hibernate.mapping.PersistentClass.checkPropertyColumnDuplication(PersistentClass.java:727)
	at org.hibernate.mapping.PersistentClass.checkColumnDuplication(PersistentClass.java:753)
	at org.hibernate.mapping.PersistentClass.validate(PersistentClass.java:506)
	at org.hibernate.mapping.RootClass.validate(RootClass.java:270)
	at org.hibernate.cfg.Configuration.validate(Configuration.java:1358)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1849)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl$4.perform(EntityManagerFactoryBuilderImpl.java:850)
	... 52 more
... Removed 33 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass setUpClass -->
  <testcase name="@BeforeMethod setUpMethod" time="0.0" classname="com.siyanda.atmWeb.test.repository.AtmCustomerRepositoryTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUpMethod -->
  <testcase name="@AfterMethod tearDownMethod" time="0.0" classname="com.siyanda.atmWeb.test.repository.AtmCustomerRepositoryTest">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDownMethod -->
  <testcase name="@AfterClass tearDownClass" time="0.0" classname="com.siyanda.atmWeb.test.repository.AtmCustomerRepositoryTest">
    <skipped/>
  </testcase> <!-- @AfterClass tearDownClass -->
  <testcase name="createAtmCustomer" time="0.002" classname="com.siyanda.atmWeb.test.repository.AtmCustomerRepositoryTest">
    <skipped/>
  </testcase> <!-- createAtmCustomer -->
  <testcase name="readAtmCustomer" time="0.0" classname="com.siyanda.atmWeb.test.repository.AtmCustomerRepositoryTest">
    <skipped/>
  </testcase> <!-- readAtmCustomer -->
  <testcase name="updateAtmCustomer" time="0.0" classname="com.siyanda.atmWeb.test.repository.AtmCustomerRepositoryTest">
    <skipped/>
  </testcase> <!-- updateAtmCustomer -->
  <testcase name="deleteAtmCustomer" time="0.001" classname="com.siyanda.atmWeb.test.repository.AtmCustomerRepositoryTest">
    <skipped/>
  </testcase> <!-- deleteAtmCustomer -->
</testsuite> <!-- Command line test -->
